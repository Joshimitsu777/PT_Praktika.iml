package Aufgabe7;

    /**
     * Dieses Interface bietet Zugriff auf die Verbindungs- und Entfernungsmatrix zwischen den Städten
     */
    public class Verbindungsdaten {

        /**
         * In diesem Aufzählungstypen sind Konstanzen für alle Städte enthalten. Die Konstanten haben die gleiche
         * Reihenfolge wie die Städte in der Verbindungsmatrix
         */
        public enum Staedte {
            FLENSBURG, HAMBURG, ROTTERDAM, HANNOVER, BERLIN, BRUESSEL, DORTMUND, KOELN, KASSEL, MAINZ,
            FRANKFURT, MANNHEIM, SAARBRUECKEN, STUTTGART, NUERNBERG, MUENCHEN, BASEL, ZUERICH, BERN, SALZBURG,
            LINZ, WIEN, GENF, INNSBRUCK, BOZEN, GRAZ, MAILAND, VERONA, TRIEST
        }

        /**
         * In dieser Verbindungsmatrix kann man ablesen, ob es eine direkte Verbindung zwischen zwei Städten gibt - dann ist
         * die entsprechende Zelle != "". Wenn es eine Verbindung gibt, dann beinhaltet die Zelle die Entfernung als
         * Ganzzzahl (ablegt als Zeichenkette).
         */
        public static String[][] VERBINDUNGEN =
                {
                        {"", "2", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"2", "", "5", "2", "3", "", "4", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "5", "", "", "", "2", "5", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "2", "", "", "3", "", "", "", "2", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "3", "", "3", "", "", "", "", "5", "", "", "", "", "", "5", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "2", "", "", "", "", "2", "", "", "", "", "4", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "4", "5", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "2", "", "", "", "2", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "2", "5", "", "", "", "", "", "2", "", "", "", "6", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "2", "", "", "1", "1", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "2", "1", "", "", "", "", "2", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "1", "", "", "4", "2", "", "", "3", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "4", "", "", "", "", "", "4", "", "4", "", "", "3", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "2", "4", "", "", "2", "3", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "5", "", "", "", "6", "", "2", "", "", "", "", "2", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "2", "2", "", "", "3", "", "1", "", "", "", "2", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "3", "3", "3", "", "", "", "1", "1", "", "", "", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "3", "1", "", "", "", "", "", "", "", "", "", "3", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "", "", "2", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "", "1", "", "", "", "", "4", "", "", "5"},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "2", "", "", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "", "2", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "", "2", "", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "", "", "", "", "", "2", "", "1", "", "", "", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "1", "", "", "", "2", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "4", "", "2", "", "", "", "", "", "", "3"},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "3", "", "", "", "", "", "", "", "", "", "2", ""},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2", "", "2", "", "3"},
                        {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "5", "", "", "", "", "", "3", "", "3", ""}};


        /**
         * Liefert die Entfernung zwischen den beiden Städten, wenn sie direkt miteinander verbunden sind. Liefert -1, wenn
         * es keine direkte Verbindung zwischen den Städten gibt.
         */
        public static int getEntfernung(Aufgabe7.Verbindungsdaten.Staedte stadt1, Aufgabe7.Verbindungsdaten.Staedte stadt2) {
            String entfernungsString = VERBINDUNGEN[stadt1.ordinal()][stadt2.ordinal()];
            if (entfernungsString.isEmpty()) {
                return -1;
            } else {
                return Integer.valueOf(entfernungsString);
            }
        }
    }


